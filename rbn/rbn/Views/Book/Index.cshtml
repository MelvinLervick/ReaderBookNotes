@model IEnumerable<rbn.Models.BookModel>

@{
  ViewBag.Title = "Book List";
  Layout = "~/Views/Shared/_LayoutBooks.cshtml";
}

<div class="Book">
  <h2>Book List</h2>

  @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrator") || Roles.GetRolesForUser(User.Identity.Name).Contains("Contributor"))
  {
    @Html.ActionLink( "Add New Book", "Create", new { id = 0 }, new { @class="AddButton", type = "button" } )
  }
  @Html.ValidationSummary( "", new { @class="Message" } )

  <div class="List">
    <table>
      <tr>
        <th class="Title">
          @Html.DisplayNameFor( model => model.Title )
        </th>
        <th class="Separator"></th>
        <th class="AuthorName">
          @Html.DisplayNameFor( model => model.AuthorName )
        </th>
        <th class="Separator"></th>
        <th class="ISBN">
          @Html.DisplayNameFor( model => model.ISBN )
        </th>
        <th class="Separator"></th>
        <th class="Audience">
          @Html.DisplayNameFor( model => model.AudienceName )
        </th>
        <th class="Separator"></th>
        <th class="Rating">
          @Html.DisplayNameFor( model => model.Rating )
        </th>
        <th class="Separator"></th>
        <th class="Buttons"></th>
      </tr>

      @foreach (var item in Model)
      {
        <tr>
          <td>
            @Html.DisplayFor( modelItem => item.Title )
          </td>
          <td class="Separator"></td>
          <td>
            @Html.DisplayFor( modelItem => item.AuthorName )
          </td>
          <td class="Separator"></td>
          <td>
            @Html.DisplayFor( modelItem => item.ISBN )
          </td>
          <td class="Separator"></td>
          <td>
            @Html.DisplayFor( modelItem => item.AudienceName )
          </td>
          <td class="Separator"></td>
          <td class="RatingValue">
            @Html.DisplayFor( modelItem => item.Rating )
          </td>
          <td class="Separator"></td>
          <td class="Buttons">
            @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrator"))
            {
              @Html.ActionLink("Edit", "Update", new {id = item.BookId}, new {@class = "Button", type = "button"})
            }
            @Html.ActionLink( "Book Notes", "BookNotes", "Home", new { id = item.BookId }, new { @class="Button", type = "button" } )
            @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrator"))
            {
              if (item.Enabled)
               {
                 @Html.ActionLink("Disable", "Delete", new {id = item.BookId, enabled = 0}, new {@class = "Button", type = "button"})
               }
               else
               {
                 @Html.ActionLink("Enable", "Delete", new {id = item.BookId, enabled = 1}, new {@class = "Button", type = "button"})
               }
            }
          </td>
        </tr>
      }

    </table>
  </div>
</div>
