@model IEnumerable<rbn.Models.AuthorModel>

@{
  ViewBag.Title = "Author List";
  Layout = "~/Views/Shared/_LayoutBooks.cshtml";
}

@using (Html.BeginForm())
{
  <div class="Author">
    <h2>@ViewBag.Title</h2>
    @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrator") || Roles.GetRolesForUser(User.Identity.Name).Contains("Contributor"))
    {
      @Html.ActionLink( "Add New Author", "Create", new { id = 0 }, new { @class="AddButton", type = "button" } )
    }
    @Html.ValidationSummary( "", new { @class="Message" } )

    <div class="List">
      <table>
        <tr>
          <th class="LastName">
            @Html.DisplayNameFor(model => model.LastName)
          </th>
          <th class="Separator"></th>
          <th class="FirstName">
            @Html.DisplayNameFor(model => model.FirstName)
          </th>
          <th class="Separator"></th>
          <th class="MiddleName">
            @Html.DisplayNameFor(model => model.MiddleName)
          </th>
          <th class="Separator"></th>
          <th class="Rating">
            @Html.DisplayNameFor(model => model.Rating)
          </th>
          <th class="Separator"></th>
          <th class="Buttons"></th>
        </tr>

        @foreach (var item in Model)
        {
          <tr>
            <td>
              @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td class="Separator"></td>
            <td>
              @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td class="Separator"></td>
            <td>
              @Html.DisplayFor(modelItem => item.MiddleName)
            </td>
            <td class="Separator"></td>
            <td class="RatingValue">
              @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td class="Separator"></td>
            <td class="Buttons">
              @if (Roles.GetRolesForUser( User.Identity.Name ).Contains( "Administrator" ) || Roles.GetRolesForUser( User.Identity.Name ).Contains( "Contributor" ))
              {
                  @Html.ActionLink("Edit", "Update", new {id = item.AuthorId}, new {@class = "Button", type = "button"})
              }
              @Html.ActionLink( "Show Books", "Index", "Book", new { id = item.AuthorId }, new { @class="Button", type = "button" } )
              @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrator"))
              {
                if (item.Enabled)
                 {
                   @Html.ActionLink("Disable", "Delete", new {id = item.AuthorId, enabled = 0}, new {@class = "Button", type = "button"})
                 }
                 else
                 {
                   @Html.ActionLink("Enable", "Delete", new {id = item.AuthorId, enabled = 1}, new {@class = "Button", type = "button"})
                 }
              }
            </td>
          </tr>
        }
      </table>
    </div>
  </div>
}