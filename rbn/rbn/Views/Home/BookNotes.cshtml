@model rbn.Models.ReaderNotesModel

@{
  ViewBag.Title = "Reader Book Notes";
  Layout = "~/Views/Shared/_LayoutBooks.cshtml";
}

<div class="Notes">
  @using (Html.BeginForm( "BookNotes", "Home", FormMethod.Post, new { id = "BookNotes" } ))
  {
    <h2>@ViewBag.Title</h2>
    <h3>&nbsp;for&nbsp;</h3>
    <div class="ReaderAlias">
      @Html.DropDownList( "ReaderId", ViewBag.ReaderId as SelectList, " --Select Reader Alias-- ", 
          htmlAttributes: new { onchange = "document.getElementById('BookNotes').submit();" } )
    </div>

    @Html.AntiForgeryToken()

    @Html.HiddenFor( model => model.BookId )
    @Html.HiddenFor( model => model.Title )
    @Html.HiddenFor( model => model.AuthorId )
    @Html.HiddenFor( model => model.AuthorName )
    @Html.HiddenFor( model => model.Rating )

    <div class="AuthorTitleRating">
      @Html.LabelFor( model => model.Title, new { @class = "LabelTitle" } )
      @Html.Label( Model.Title, new { @class = "Title" } )
      @Html.LabelFor( model => model.AuthorName, new { @class = "LabelAuthor" } )
      @Html.Label( Model.AuthorName, new { @class = "AuthorName" } )
      @Html.LabelFor( model => model.Rating, new { @class = "LabelRating" } )
      @Html.Label( Model.Rating.ToString(), new { @class = "Rating" } )
    </div>

    if (Roles.GetRolesForUser( User.Identity.Name ).Contains( "Administrator" ) || Roles.GetRolesForUser( User.Identity.Name ).Contains( "Contributor" ))
    {
      <div class="contributorNotes">
        Contributor Body
      </div>
    }
    else
    {
      <div class="readerNotes">
        Reader Body
      </div>
    }
    <div class="Audience">
      @Html.LabelFor( model => model.AudienceId, new { @class = "Label" } )
      @Html.DropDownList( "AudienceId", "--Select Audience--" )
    </div>
  }
</div>

@section Scripts {
  @Scripts.Render( "~/bundles/jqueryval" )
}
