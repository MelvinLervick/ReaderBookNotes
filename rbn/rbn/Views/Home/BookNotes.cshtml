@model rbn.Models.ReaderNotesModel

@{
  ViewBag.Title = "Reader Book Notes";
  Layout = "~/Views/Shared/_LayoutBooks.cshtml";
}

<div class="Notes">
  @using (Html.BeginForm( "BookNotes", "Home", FormMethod.Post, new { id = "BookNotes" } ))
  {
    <h2>@ViewBag.Title</h2>
    <h3>&nbsp;for&nbsp;</h3>
    <div class="ReaderAlias">
      @Html.DropDownList( "ReaderId", ViewBag.ReaderId as SelectList, " --Select Reader Alias-- ",
          htmlAttributes: new { onchange = "document.getElementById('BookNotes').submit();" } )
    </div>
    @Html.LabelFor( model => model.ReaderRating, new { @class = "LabelReaderRating" } )
    @Html.Label( Model.ReaderRating.ToString(), new { @class = "ReaderRating" } )

    @Html.AntiForgeryToken()

    @Html.HiddenFor( model => model.BookId )
    @Html.HiddenFor( model => model.Title )
    @Html.HiddenFor( model => model.AuthorId )
    @Html.HiddenFor( model => model.AuthorName )
    @Html.HiddenFor( model => model.ReviewerCommentRating )
    @Html.HiddenFor( model => model.ReviewerBookRating )
    @Html.HiddenFor( model => model.ReaderRating )
    @Html.HiddenFor( model => model.BookRating )

    <div class="AuthorTitleRating">
      @Html.LabelFor( model => model.Title, new { @class = "LabelTitle" } )
      @Html.Label( Model.Title, new { @class = "Title" } )
      @Html.LabelFor( model => model.AuthorName, new { @class = "LabelAuthor" } )
      @Html.Label( Model.AuthorName, new { @class = "AuthorName" } )
      @Html.LabelFor( model => model.BookRating, new { @class = "LabelBookRating" } )
      @Html.Label( Model.BookRating.ToString(), new { @class = "BookRating" } )
    </div>

    if (Roles.GetRolesForUser( User.Identity.Name ).Contains( "Administrator" ) || Roles.GetRolesForUser( User.Identity.Name ).Contains( "Contributor" ))
    {
    <div class="contributorNotes">
      Contributor Body
    </div>
    }
    else
    {
    <div class="readerNotes">
      Reader Body
    </div>
    }
    <div class="Audience">
      <input type="submit" class="Previous" name="buttons" value="Previous" />
      <input type="submit" class="Next" name="buttons" value="Next" />
      @Html.LabelFor( model => model.AudienceId, new { @class = "Label" } )
      @Html.DropDownList( "AudienceId", "--Select Audience--" )
      @Html.LabelFor( model => model.Notify, new { @class = "NotifyLabel" } )
      @Html.CheckBoxFor( model => model.Notify, new { @class = "Notify" } )
      <input type="submit" class="SaveChanges" name="buttons" value="Add Note" />
    </div>
    <div class="ReviewerRatingBlock">
      @Html.Label( "Please Rate (where 9 is best)", new { @class = "LabelRatingFixed" } )
      <div class="ReviewerRating">
        <div class="inline">
          @Html.LabelFor( model => model.ReviewerCommentRating, new { @class = "LabelRating" } )
          @for (var i = 1; i < 10; i++)
          {
            <input type="submit" name="buttons" value="@i.ToString()" />
          }
        </div>
        <div class="inline">
          @Html.LabelFor( model => model.ReviewerBookRating, new { @class = "LabelBookRating" } )
          @for (var i = 1; i < 10; i++)
          {
            <input type="submit" name="bookButtons" value="@i.ToString()" />
          }
        </div>
      </div>
    </div>
  }
</div>

@section Scripts {
  @Scripts.Render( "~/bundles/jqueryval" )
}
